{"entries":[{"timestamp":1753377631736,"editorVersion":"8.0.11","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":185,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":33,"diffs":[[1,"\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":200,"length1":39,"diffs":[[1,"        \"README.md\"\n"]]},{"start1":227,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"Wait.ts","value":"\n//% weight=100 color=#2E2E2E icon=\"\\u23F3\"\n//% groups=[\"Custom Blocks\"]\nnamespace Wait {\n    /**\n     * Wait for a number of seconds using microsecond precision\n     */\n    //% block=\"wait %Seconds seconds\"\n    //% Seconds.defl=1\n    //% group=\"Custom Blocks\"\n    export function waitMicrosBased(Seconds: number): void {\n        for (let index = 0; index < Seconds * 1000; index++) {\n            control.waitMicros(1000)\n        }\n    }\n}\n"}]},{"timestamp":1753377698343,"editorVersion":"8.0.11","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":136,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>"]]}]}]},{"timestamp":1753411854806,"editorVersion":"8.0.11","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":246,"length1":35,"diffs":[[1,"    \"preferredEditor\": \"tsprj\"\n"]]}]}]},{"timestamp":1753411855469,"editorVersion":"8.0.11","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":133,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":246,"length1":31,"diffs":[[1,"    \"preferredEditor\": \"blocksprj\"\n"]]}]}]},{"timestamp":1753411858123,"editorVersion":"8.0.11","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>"]]}]}]},{"timestamp":1753457649785,"editorVersion":"8.0.11","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":246,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1753377631735,"editorVersion":"8.0.11","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Wait\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1753411854806,"editorVersion":"8.0.11","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","Wait.ts":"\n//% weight=100 color=#2E2E2E icon=\"\\u23F3\"\n//% groups=[\"Custom Blocks\"]\nnamespace Wait {\n    /**\n     * Wait for a number of seconds using microsecond precision\n     */\n    //% block=\"wait %Seconds seconds\"\n    //% Seconds.defl=1\n    //% group=\"Custom Blocks\"\n    export function waitMicrosBased(Seconds: number): void {\n        for (let index = 0; index < Seconds * 1000; index++) {\n            control.waitMicros(1000)\n        }\n    }\n}\n","pxt.json":"{\n    \"name\": \"Wait\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"Wait.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1753457649785,"editorVersion":"8.0.11","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","Wait.ts":"\n//% weight=100 color=#2E2E2E icon=\"\\u23F3\"\n//% groups=[\"Custom Blocks\"]\nnamespace Wait {\n    /**\n     * Wait for a number of seconds using microsecond precision\n     */\n    //% block=\"wait %Seconds seconds\"\n    //% Seconds.defl=1\n    //% group=\"Custom Blocks\"\n    export function waitMicrosBased(Seconds: number): void {\n        for (let index = 0; index < Seconds * 1000; index++) {\n            control.waitMicros(1000)\n        }\n    }\n}\n","pxt.json":"{\n    \"name\": \"Wait\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"Wait.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1753457649802}